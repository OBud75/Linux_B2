Exploring how computers work:
        https://youtube.com/playlist?list=PLFt_AvWsXl0dPhqVsKt1Ni_46ARyiCGSq&si=qlKNkUKPXxHM2cNZ
	https://www.nand2tetris.org/
	https://fr.wikipedia.org/wiki/Alg%C3%A8bre_de_Boole_(logique)
	https://fr.wikipedia.org/wiki/Lois_de_De_Morgan

Unix
	https://fr.wikipedia.org/wiki/AT%26T
	https://fr.wikipedia.org/wiki/Laboratoires_Bell
	https://en.wikipedia.org/wiki/Sun_Microsystems
        https://fr.wikipedia.org/wiki/Berkeley_Software_Distribution
        https://fr.wikipedia.org/wiki/Noyau_de_syst%C3%A8me_d%27exploitation

        https://en.wikipedia.org/wiki/Unix-like
        Brian Kernighan: UNIX, C, AWK, AMPL, and Go Programming | Lex Fridman Podcast :
                https://youtu.be/O9upVbGSBFo?si=4iImVjR-OW1DImj9
        AT&T Archives: The UNIX Operating System:
                https://youtu.be/tc4ROCJYbm0?si=qqe3y9SrxSr7Yc4H

GNU
	https://fr.wikipedia.org/wiki/Richard_Stallman
	https://fr.wikipedia.org/wiki/GNU
	https://wiki.crans.org/InstallParty/AffichesDePromotion?action=AttachFile&do=get&target=affiche-gnu.pdf	


Gnu-Linux
	https://en.wikipedia.org/wiki/Linux_kernel
	https://en.wikipedia.org/wiki/History_of_Linux
	The mind behind Linux | Linus Torvalds | TED :
		https://youtu.be/o8NPllzkFhE?si=wgWaq1t3nQJGzE9c

        https://www.gnu.org/
        https://docs.kernel.org/
	https://gnome.org/https://guide.ubuntu-fr.org/
	https://apps.gnome.org/


Cours avec exercices
	https://linuxjourney.com/
	https://openclassrooms.com/fr/courses/7170491-initiez-vous-a-linux
	https://openclassrooms.com/fr/courses/7274161-administrez-un-systeme-linux
	https://openclassrooms.com/fr/courses/1733551-gerez-votre-serveur-linux-et-ses-services
	https://openclassrooms.com/fr/courses/2356316-montez-un-serveur-de-fichiers-sous-linux


Deployment
	https://fr.wikipedia.org/wiki/WebSocket
	https://fr.wikipedia.org/wiki/Serveur_web

	https://www.digitalocean.com/community/tutorials/how-to-deploy-python-wsgi-applications-using-uwsgi-web-server-with-nginx
	https://www.sysnove.fr/blog/2014/01/deployer-application-web-python-nginx-uwsgi.html


Flask
	https://flask.palletsprojects.com/en/stable/deploying/
	https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-20-04
	https://medium.com/@yekabotep/deploy-flask-app-in-nginx-using-uwsgi-with-architectural-explanation-2e24a41c030a        

Django
	https://docs.djangoproject.com/en/5.1/howto/deployment/
	https://openclassrooms.com/fr/courses/4425101-deployez-une-application-django/4688335-configurez-un-espace-serveur


Ubuntu
	https://ubuntu.com/
	https://help.ubuntu.com/
	https://manpages.ubuntu.com/
	https://ubuntu.com/server/docs/
	https://guide.ubuntu-fr.org/
	https://launchpad.net/ubuntu


Ubuntu - Tutoriels
        https://doc.ubuntu-fr.org/tutoriel/amorcer_sur_cd_ubuntu
        https://doc.ubuntu-fr.org/tutoriel/installer_ubuntu_avec_le_live_cd
        https://doc.ubuntu-fr.org/tutoriel/completer_installation_ubuntu
        https://doc.ubuntu-fr.org/reflexe_ubunteros
        https://doc.ubuntu-fr.org/tutoriel/learn_unix_in_10_minutes

        https://doc.ubuntu-fr.org/projets/ecole/scripting/initiation_au_shell
        https://doc.ubuntu-fr.org/tutoriel/console_ligne_de_commande
        https://doc.ubuntu-fr.org/tutoriel/console_commandes_de_base
        https://doc.ubuntu-fr.org/tutoriel/comment_modifier_un_fichier
        https://doc.ubuntu-fr.org/tutoriel/comment_sauver_et_restaurer_un_fichier
        https://doc.ubuntu-fr.org/tutoriel/gestion_utilisateurs_et_groupes_en_ligne_de_commande
        https://doc.ubuntu-fr.org/tutoriel/effectuer_des_taches_en_super_utilisateur

        https://doc.ubuntu-fr.org/tutoriel/tout_savoir_sur_les_modules_linux
        https://doc.ubuntu-fr.org/tutoriel/donnees_stockees_dans_un_systeme_de_fichiers_zfs
        https://doc.ubuntu-fr.org/tutoriel/reverse_ssh


Ubuntu - Documentations
        https://www.ubuntu-fr.org/download/
        https://doc.ubuntu-fr.org/installation
        https://doc.ubuntu-fr.org/cohabitation_ubuntu_windows

        https://doc.ubuntu-fr.org/console
        https://doc.ubuntu-fr.org/terminal
        https://doc.ubuntu-fr.org/commande_shell
        https://doc.ubuntu-fr.org/editeur_de_texte
        https://doc.ubuntu-fr.org/vim
        https://doc.ubuntu-fr.org/ide
        https://doc.ubuntu-fr.org/visual_studio_code

        https://doc.ubuntu-fr.org/systeme
        https://doc.ubuntu-fr.org/utilisateur
        https://doc.ubuntu-fr.org/utilisateurs_et_groupes
        https://doc.ubuntu-fr.org/droits
        https://doc.ubuntu-fr.org/permissions
        https://doc.ubuntu-fr.org/users-admin
        https://doc.ubuntu-fr.org/sudo
        https://doc.ubuntu-fr.org/sudoers
	https://doc.ubuntu-fr.org/variables_d_environnement

	https://doc.ubuntu-fr.org/apt
        https://doc.ubuntu-fr.org/apt-get
        https://doc.ubuntu-fr.org/apt-cli
        https://doc.ubuntu-fr.org/gestionnaire_de_mises_a_jour
        https://doc.ubuntu-fr.org/nettoyer_ubuntu

        https://doc.ubuntu-fr.org/services
        https://doc.ubuntu-fr.org/systemd
        https://doc.ubuntu-fr.org/creer_un_service_avec_systemd
        https://doc.ubuntu-fr.org/logrotate
        https://doc.ubuntu-fr.org/cron
        https://doc.ubuntu-fr.org/mount_fstab
        https://doc.ubuntu-fr.org/mounter_un_disque_avec_systemd.automount 
        https://doc.ubuntu-fr.org/analyseur_usage_espace_disque
        https://doc.ubuntu-fr.org/nettoyer_ubuntu

        https://doc.ubuntu-fr.org/securite
        https://doc.ubuntu-fr.org/diagnostic_outil
        https://doc.ubuntu-fr.org/ufw
        https://doc.ubuntu-fr.org/gnupg
        https://doc.ubuntu-fr.org/network-manager
        https://doc.ubuntu-fr.org/ssh
        https://doc.ubuntu-fr.org/configurer_mail


Windows Subsystem Linux
        https://learn.microsoft.com/fr-fr/windows/wsl/
        https://youtu.be/lwhMThePdIo?si=xnFOB-pTSb8m2h06

        https://learn.microsoft.com/fr-fr/windows/wsl/filesystems
        https://learn.microsoft.com/fr-fr/windows/wsl/tutorials/linux
        https://learn.microsoft.com/fr-fr/windows/wsl/tutorials/wsl-git
        https://learn.microsoft.com/fr-fr/windows/wsl/tutorials/gui-apps

        https://learn.microsoft.com/fr-fr/training/modules/bash-introduction

Windows tools
	https://chocolatey.org/
	https://apps.microsoft.com/
	https://git-scm.com/downloads


Cours et ressources diverses
	https://linux.die.net/man/1/lockfile
        https://supervisord.org/index.html
        https://serversforhackers.com/c/monitoring-processes-with-supervisord
	https://www.digitalocean.com/community/tutorials/how-to-install-and-manage-supervisor-on-ubuntu-and-debian-vps

Python for admin
	https://docs.python.org/fr/3.13/library/os.html
	https://docs.python.org/3/library/os.path.html
	https://docs.python.org/3/library/pathlib.html -> Librairie "haut niveau d'abstraction"
	https://docs.python.org/3/library/stat.html

	https://docs.python.org/fr/3/library/threading.html
	https://docs.python.org/fr/3/library/multiprocessing.html

Python for requests
	https://docs.python.org/fr/3/library/http.html
	https://docs.python.org/fr/3.13/library/urllib.request.html
	https://urllib3.readthedocs.io/en/stable/
	https://requests.readthedocs.io/en/latest/ -> Librairie "haut niveau d'abstraction"

Utils
	https://pythontutor.com/
	https://markdownlivepreview.com/
	https://regex101.com/
	https://ngrok.com/


CS50 (Intro Computer Sciences):
	https://www.edx.org/cs50
	https://cs50.harvard.edu/x/2025/
	https://cs50.harvard.edu/x/2025/psets/
        https://youtu.be/h6lqxDwUmJQ?si=pxKcU3PazvHqCaC_

	https://cs50.harvard.edu/ai/2024/
	https://cs50.harvard.edu/cybersecurity/2023/
	https://cs50.harvard.edu/sql/2024/


Syscall table
        https://chromium.googlesource.com/chromiumos/docs/+/master/constants/syscalls.md


Dev
	L'IA n'existe pas (Luc Julia) https://youtu.be/yuDBSbng_8o?si=0olR7cCnEohElaeB
	https://www.youtube.com/@CodeAesthetic
	https://peps.python.org/pep-0008/
	Oncle Bob :
		Clean code
		Clean architecture 
		https://blog.cleancoder.com/
		https://www.mozilla.org/fr/
		https://developer.mozilla.org/fr/
		https://fr.wikipedia.org/wiki/UML_(informatique)
		https://en.wikipedia.org/wiki/Software_design_pattern

3 hardest things in CS:
	- Naming things
	- Cache invalidation
	- N+1 errors

Zen of python
Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!


Stanford Programming paradigms (Cours avanc√©)
        https://youtube.com/playlist?list=PL9D558D49CA734A02&si=2J0OBWzOZj86nUup
